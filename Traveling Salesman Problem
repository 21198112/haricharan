#include <stdio.h>
#include <limits.h>
#define N 4 
int tsp(int graph[N][N], int mask, int pos) 
{
if(mask == (1 << N) - 1) 
return graph[pos][0];
int minCost = INT_MAX;
for(int city = 0; city < N; city++)
{
if((mask & (1 << city)) == 0) {
int newMask = mask | (1 << city); 
int newCost = graph[pos][city] + tsp(graph, newMask, city);
minCost = (minCost < newCost) ? minCost : newCost;
}
}
return minCost;
}
int main() {
    int graph[N][N] = { {0, 10, 15, 20},
                        {10, 0, 35, 25},
                        {15, 35, 0, 30},
                        {20, 25, 30, 0} };
int startCity = 0;
int minCost = tsp(graph, 1 << startCity, startCity);
printf("Minimum cost of visiting all cities: %d\n", minCost);
return 0;
}
OUTPUT:
Minimum cost of visiting all cities: 80

